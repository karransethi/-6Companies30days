link : https://practice.geeksforgeeks.org/problems/minimum-sum-partition3317/1/
sol :
	int minDifference(int arr[], int n)  { 
	    // Your code goes here
	    int sum=0;
	    for(int i=0;i<n;i++)
	    sum+=arr[i];
	    bool dp[n+1][sum+1];
	    for(int i=0;i<=sum;i++)
	    {
	        dp[0][i]=false;
	    }
	    for(int i=0;i<=n;i++)
	    {
	        dp[i][0]=true;
	    }
	    for(int i=1;i<=n;i++)
	    {
	        for(int j=1;j<=sum;j++)
	        {
	            if(arr[i-1]<=j)
	            {
	                dp[i][j]=dp[i-1][j]||dp[i-1][j-arr[i-1]];
	            }else{
	                dp[i][j]=dp[i-1][j];
	            }
	        }
	    }
	    vector<int>v;
	    for(int i=0;i<=sum/2;i++)
	    if(dp[n][i])
	    v.push_back(i);
	    
	    int ans=INT_MAX;
	    for(int i=0;i<v.size();i++)
	    {
	        ans=min(ans,sum-2*v[i]);
	    }
	    return ans;
	} 
