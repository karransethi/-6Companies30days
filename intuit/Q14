link : https://leetcode.com/problems/as-far-from-land-as-possible/
sol :
 #define pii pair<int,int>
    int maxDistance(vector<vector<int>>& grid) {
        int n=grid.size();
        queue<pii>q;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
              if(grid[i][j])
                  q.push({i,j});
            }
        }
        int ans=0;
        if(q.size()==n*n)
            return -1;
        int xd[4]={-1,1,0,0};
        int yd[4]={0,0,1,-1};
        while(q.size())
        {
            ans++;
            int size=q.size();
            while(size--)
            {
                pii p=q.front();
                q.pop();
                int x=p.first;
                int y=p.second;
                for(int k=0;k<4;k++)
                {
                    int dx=x+xd[k];
                    int dy=y+yd[k];
                    if(dx>=0 && dy>=0 && dx<n && dy<n && grid[dx][dy]==0)
                    {
                        grid[dx][dy]=1;
                        q.push({dx,dy});
                    }
                }
            }
        }
        return ans-1;
    }
