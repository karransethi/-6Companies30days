link : https://leetcode.com/problems/minimum-swaps-to-arrange-a-binary-grid/
sol :
int minSwaps(vector<vector<int>>& grid) {
        int n=grid.size();
        int dp[n];
        for(int i=0;i<n;i++)
        {
            int c=0;
            for(int j=n-1;j>=0;j--)
            {
                if(!grid[i][j])
                    c++;
                else
                    break;
            }
            dp[i]=c;
            //cout<<dp[i]<<endl;
        }
        int ans=0;
        for(int i=0;i<n;i++)
        {
            if(dp[i]<(n-i-1))
            {
                int j=i+1;
                while(j<n)
                {
                    if(dp[j]>=(n-i-1))
                        break;
                    j++;
                }
                if(j==n)
                    return -1;
                while(j!=i)
                {
                    swap(dp[j],dp[j-1]);
                    j--;
                    ans++;
                }
            }
        }
        return ans;
    }
