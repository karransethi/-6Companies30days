link : https://leetcode.com/problems/number-of-provinces/
sol :
    void dfs(vector<int>adj[],int u,vector<bool>&vis)
    {
        if(vis[u])
            return;
        else{
           vis[u]=true;
            for(auto v:adj[u])
            {
                if(!vis[v])
                    dfs(adj,v,vis);
            }
        }
    }
    int findCircleNum(vector<vector<int>>& is) {
      int n=is.size();
        vector<int>adj[n];
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(is[i][j])
                {
                    adj[i].push_back(j);
                    adj[j].push_back(i);
                }
            }
        }
        vector<bool>vis(n,false);
                int count=0;
        for(int i=0;i<n;i++)
        {
            if(!vis[i])
            { 
                count++;
                dfs(adj,i,vis);
            }
        }

        return count;
    }
