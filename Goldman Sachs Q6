// Greatest Common Divisor of Strings
link : https://leetcode.com/problems/greatest-common-divisor-of-strings/
sol:
 string gcdOfStrings(string a, string b) {
        int n=a.length();
        int m=b.length();
        string r="";
        int i=0;
        int j=0;
        while(i<n && j<m && a[i]==b[j])
        {
            r+=a[i++];
            j++;
        }
        for(int i=0;i<r.length();i++)
        {
            string t=r.substr(0,r.length()-i);
            int c1=0;
            int c2=0;
            int st=0;
            while(a.find(t,st)!=string::npos)
            {
                st=a.find(t,st)+t.length();
                c1++;
            }
            st=0;
            while(b.find(t,st)!=string::npos)
            {
                st=b.find(t,st)+t.length();
                c2++;
            }
            int len=t.length();
            if(c1*len==n && c2*len==m)
            {
                return t;
            }
        }
        return "";
    }
